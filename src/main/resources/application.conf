akka {
    loglevel = DEBUG
}

mySpecialConfig {
    akka {
        loglevel = DEBUG
    }
}

#timed assertions test config
specialTimedAssertionsConfig {
    akka.test.single-expect-default = 0.3sec
}

#interception log messages test
interceptionLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
    }
}

#interception log messages test
interceptionLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
    }
}

#routers demo
routersDemo {
    akka {
        actor.deployment {
            /poolMaster2 {
                router = round-robin-pool
                nr-of-instances = 5
            }
            /groupMaster2 {
                router = round-robin-group
                routees.path = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
            }
        }
    }
}

#dispatcher demo
myDispatcher {
    type = Dispatcher #PinnedDispatcher or #CallingThreadDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 1
    }
    throughput = 30
}
dispatchersDemo {
    akka.actor.deployment {
        /ourActorRockTheJvm {
            dispatcher = myDispatcher
        }
    }
}

#mailboxes demo
mailboxesDemo {
    support-ticker-dispatcher {
        mailbox-type = "part5infra.MailBoxes$SupportTicketPriorityMailbox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = control-mailbox
        }
    }
}